---
  # https://community.home-assistant.io/t/efun-sh331w-smart-plug-esphome-configuration-file/161112
  # https://templates.blakadder.com/efun_SH331W.html
  # https://www.belling.com.cn/media/file_object/bel_product/BL0937/datasheet/BL0937_V1.02_en.pdf

  # Button: GPIO13, Inverted
  # Relay: GPIO15
  # Red LED: GPIO0, Inverted
  # Blue LED: GPIO2, Inverted
  # BL0937 SEL: GPIO12, Inverted
  # BL0937 CF: GPIO5
  # BL0937 CF1: GPIO14

  # https://esphome.io/components/esphome.html
  esphome:
    name: ${device_name}
    comment: ${device_comment}
    platform: ESP8266
    board: esp01_1m
    # https://esphome.io/components/esphome.html#esp8266-restore-from-flash
    esp8266_restore_from_flash: true
    # https://esphome.io/components/esphome.html#on-boot
    on_boot:
      then:
        - if:
            condition:
              switch.is_on:
                id: relay
            then:
              - light.turn_on:
                  id: blue_led
                  brightness: 100%

  # https://esphome.io/components/binary_sensor/index.html
  binary_sensor:

    # https://esphome.io/components/binary_sensor/gpio.html
    - platform: gpio
      name: ${device_name}_button
      device_class: power
      pin:
        number: GPIO13
        inverted: true
      on_press:
        - switch.toggle: relay

    # https://esphome.io/components/binary_sensor/status.html
    - platform: status
      name: ${device_name}_status

  # https://esphome.io/components/text_sensor/index.html
  text_sensor:

    # https://esphome.io/components/text_sensor/version.html
    - platform: version
      name: ${device_name}_version

  # https://esphome.io/components/switch/index.html
  switch:

    # https://esphome.io/components/switch/gpio.html
    - platform: gpio
      name: ${device_name}_relay
      id: relay
      pin: GPIO15
      # Restore previous relay state on power-on
      restore_mode: RESTORE_DEFAULT_OFF
      on_turn_on:
        - light.turn_on:
            id: blue_led
            brightness: 100%
      on_turn_off:
        - light.turn_off: blue_led

  # https://esphome.io/components/output/index.html
  output:

    # https://esphome.io/components/output/esp8266_pwm.html
    - platform: esp8266_pwm
      id: red_output
      pin: GPIO0
      inverted: true
    
    - platform: esp8266_pwm
      id: blue_output
      pin: GPIO2
      inverted: true

# https://esphome.io/components/light/index.html
  light:
    
    # https://esphome.io/components/light/monochromatic.html
    - platform: monochromatic
      name: ${device_name}_red_led
      id: red_led
      output: red_output
      restore_mode: ALWAYS_OFF

    - platform: monochromatic
      name: ${device_name}_blue_led
      id: blue_led
      output: blue_output
      restore_mode: ALWAYS_OFF

  # https://esphome.io/guides/automations.html#interval
  interval:
    - interval: 500ms
      then:
        # https://esphome.io/guides/automations.html#if-action
        - if:
            condition:
              not:
                wifi.connected:
            then:
              - light.turn_on:
                  id: red_led
                  brightness: 100%
                  transition_length: 0s
              - delay: 250ms
              - light.turn_off:
                  id: red_led
                  transition_length: 250ms

  # https://esphome.io/components/sensor/index.html
  sensor:

    # https://esphome.io/components/sensor/wifi_signal.html
    - platform: wifi_signal
      name: ${device_name}_wifi_signal
      update_interval: 60s

    # https://esphome.io/components/sensor/uptime.html  
    - platform: uptime
      name: ${device_name}_uptime
      unit_of_measurement: minutes
      filters:
        - lambda: return x / 60.0;
         
    # https://esphome.io/components/sensor/hlw8012.html
    - platform: hlw8012
      change_mode_every: 3
      update_interval: 3s
      sel_pin:
        number: GPIO12
        inverted: true
      cf_pin: GPIO5
      cf1_pin: GPIO14
      current_resistor: 0.001
      voltage_divider: 940
      current:
        name: ${device_name}_current
        unit_of_measurement: A
        filters:
          # https://esphome.io/components/sensor/index.html#calibrate-linear
          - calibrate_linear:
            - 0.0000 -> 0.0110 # Relay off no load
            - 0.0097 -> 0.0260 # Relay on no load
            - 0.9270 -> 0.7570
            - 2.0133 -> 1.6330
            - 2.9307 -> 2.3750
            - 5.4848 -> 4.4210
            - 8.4308 -> 6.8330
            - 9.9171 -> 7.9830
          # Normalize for plug load
          - lambda: if (x < 0.2600) return 0; else return (x - 0.0260);
      voltage:
        name: ${device_name}_voltage
        unit_of_measurement: V
        filters:
          - calibrate_linear:
            - 109.5769 -> 110.7000
            - 111.1019 -> 112.2000
            - 112.7357 -> 113.9000
            - 114.4785 -> 115.3000
            - 114.7508 -> 115.9000
            - 115.1320 -> 116.0000
            - 118.2908 -> 117.0000
            - 119.2711 -> 117.0000
      power:
        name: ${device_name}_power
        id: wattage
        unit_of_measurement: W
        filters:
          - calibrate_linear:
            - 0.0000 -> 0.5900 # Relay off no load
            - 0.0000 -> 1.5600 # Relay on no load
            - 198.5129 -> 87.8300
            - 434.2469 -> 189.5000
            - 628.6241 -> 273.9000
            - 1067.0067 -> 460.1000
            - 1619.8098 -> 699.2000
            - 2043.0282 -> 885.0000
          # Normalize for plug load
          - lambda: if (x < 1.5600) return 0; else return (x - 1.5600);

    # https://esphome.io/components/sensor/total_daily_energy.html
    - platform: total_daily_energy
      name: ${device_name}_total_daily_energy
      power_id: wattage
      filters:
        - multiply: 0.001
      unit_of_measurement: kWh
