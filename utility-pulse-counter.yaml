# https://docs.espressif.com/projects/esp-idf/en/latest/esp32/hw-reference/esp32/get-started-devkitc.html
# https://esphome.io/devices/nodemcu_esp32.html
# LED: GPIO27
# Input 1 : GPIO32
# Input 2 : GPIO33


# https://esphome.io/guides/configuration-types.html#substitutions
substitutions:
  device_name: utility-pulse-counter
  device_comment: "ESP-WROOM-32UE Utility Meter Pulse Counter"


# https://esphome.io/components/esphome.html  
esphome:
  name: ${device_name}
  comment: ${device_comment}
  platform: ESP32
  board: nodemcu-32s


# https://esphome.io/components/esphome.html#changing-esphome-node-name
# wifi:
#   use_address: utility_pulse_counter


# https://esphome.io/guides/configuration-types.html#packages
packages:
  common: !include templates/common.yaml
  status_sensor: !include templates/status_sensor.yaml
  version_sensor: !include templates/version_sensor.yaml
  wifi_sensor: !include templates/wifi_sensor.yaml
  uptime_sensor:  !include templates/uptime_sensor.yaml
  memory_sensor:  !include templates/esp32_memory_sensor.yaml
  restart_switch: !include templates/restart_switch.yaml


# https://esphome.io/components/status_led.html
status_led:
  pin:
    number: GPIO27
    inverted: true


# https://esphome.io/components/sensor/index.html
sensor:
  # https://esphome.io/components/sensor/pulse_meter.html
  # https://esphome.io/components/sensor/pulse_counter.html
  # Device class, icon, and accuracy are not inherited from main sensor, manually repeat
  # https://developers.home-assistant.io/docs/core/entity/sensor/#available-device-classes
  # https://developers.home-assistant.io/docs/core/entity/sensor/#available-state-classes
  # Water and Gas device class does not support flow rates
  - platform: pulse_counter
    pin:
      number: GPIO32
      mode: 
        input: true
        pullup: true
    update_interval: 60s
    use_pcnt: false
    count_mode:
      rising_edge: DISABLE
      falling_edge: INCREMENT
    internal_filter: 100ms
    unit_of_measurement: 'gal/min'
    name: ${device_name}_water_meter
    icon: 'mdi:water'
    # device_class: 'water'
    # state_class: 'measurement'
    filters:
      - multiply: 10
    total:
      name: ${device_name}_water_meter_total
      icon: 'mdi:water'
      device_class: 'water'
      state_class: 'total_increasing'
      id: water_total
      unit_of_measurement: 'gal'
      filters:
        - multiply: 10

  - platform: pulse_counter
    pin:
      number: GPIO33
      mode: 
        input: true
        pullup: true
    update_interval: 60s
    use_pcnt: false
    count_mode:
      rising_edge: DISABLE
      falling_edge: INCREMENT
    internal_filter: 100ms
    unit_of_measurement: 'ft³/min'
    name: ${device_name}_gas_meter
    icon: 'mdi:fire'
    # device_class: 'gas'
    # state_class: 'measurement'
    filters:
      - multiply: 10
    total:
      name: ${device_name}_gas_meter_total
      icon: 'mdi:fire'
      device_class: 'gas'
      state_class: 'total_increasing'
      id: gas_total
      unit_of_measurement: 'ft³'
      filters:
      - multiply: 10

  # https://esphome.io/components/sensor/template.html
  - platform: template
    name: ${device_name}_water_meter_total_m3
    icon: 'mdi:water'
    device_class: 'water'
    state_class: 'total_increasing'
    accuracy_decimals: 3
    unit_of_measurement: 'm³'
    # Convert gal to m³ 
    lambda: |-
      return id(water_total).state / 264.2;

  - platform: template
    name: ${device_name}_gas_meter_total_m3
    icon: 'mdi:fire'
    device_class: 'gas'
    state_class: 'total_increasing'
    accuracy_decimals: 3
    unit_of_measurement: 'm³'
    # Convert ft³ to m³
    lambda: |-
      return id(gas_total).state / 35.315;
